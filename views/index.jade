extends layout

block content
  .metrics
    .backend_response_time
      h2.name Response Time
      h1.value
    .frontend_response_time
      h2.name Page Load Time
      h1.value
  .hits.all
  .hits.microryza
  .hits.experiment
  .librato-metrics(data-instrument_id=14514669)

  script
    var all_hits = new HitsSquare({el: '.hits.all', size: 500});
    var microryza_hits = new HitsSquare({el: '.hits.microryza', size: 240});
    var experiment_hits = new HitsSquare({el: '.hits.experiment', size: 240});

    var socket = io.connect();
    socket.on('hits', function(data) {
      data.reverse()

      all_hits.set_hits(data);
      microryza_hits.set_hits(_.select(data, function(i){
        return i.host.match(/microryza\.com$/)
      }));
      experiment_hits.set_hits(_.select(data, function(i){
        return i.host.match(/experiment\.com$/)
      }));
    });
    socket.on('hit', function(data) {
      all_hits.add_hit(data);
      if(data.host.match(/microryza\.com$/)){
        microryza_hits.add_hit(data);
      };
      if(data.host.match(/experiment\.com$/)){
        experiment_hits.add_hit(data);
      };
    });
    socket.on('new_relic', function(data) {
      _.each(data, function(value, key){
        switch (key) {
          case 'be_response_time':
            $('.backend_response_time .value').html(value + ' ms');
            break;
          case 'fe_response_time':
            $('.frontend_response_time .value').html(value.toFixed(2) + ' s');
            break;
        }
      });
    });
